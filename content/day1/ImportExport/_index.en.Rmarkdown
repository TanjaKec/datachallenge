---
date: "2016-04-09T16:50:16+02:00"
title: Import Data inot R
output: 
  learnr::tutorial
weight: 8
---

It’s the first big hurdle to dealing with data in R. 

You are most likelly to have looked at, organised and examined your data files in Excel.

Opening data in R is fairly simply, but organising it for analysis might take some thought and consideration. You'll guess that it is possible to use **File | Import Dataset** menu option in RStudio to import your data (to learn more see [Importing Data with RStudio](https://support.rstudio.com/hc/en-us/articles/218611977-Importing-Data-with-RStudio)), however we’re going to do it the proper way with a command.

R can import all types of data:

- (Tab, Blank space) Delimited Text
- CSV files
- Excel files
- JSON 
- SAS
- STATA
- MiniTab
- SPSS...

The simplest data form is a [text file](https://en.wikipedia.org/wiki/Text_file). Text files can be read by any computer operating system and by almost all different kind of statistical programs. Saving data as a text file makes your data highly accessible. If you have a text data file you wish to use, you can easily import it with **the R base** functions `read.table()`

Reads a file in table format and creates a data frame from it

```
# Read tabular data into R
df_txt <- read.table(file_name.txt, header = FALSE)
```

There are many packages that let R import all types of data, and we will start by focus on `CSV` files as they are the most frequent tipe.

Comma separated files are the most common way to save spreadsheets that don’t require a licenced, usually not free program to open. Importing `CSV` is part of base R and you can use `read.csv()` function to do so. 


##### `read.csv()`

Let us go to <https://data.gov.rs/> Serbian open data portal. In particular, let us try to access [Kvalitet vazduha](https://data.gov.rs/sr/datasets/kvalitet-vazduha/) and import this data to R.

We are not going to download it onto our local computers, but rather we will import it to R directly from the web using the provided link.

```{r}
df_csv <- read.csv("https://data.gov.rs/sr/datasets/r/a8f71ec0-0a68-4d4f-8f37-ceabdcb98569", stringsAsFactors = FALSE)
head(df_csv, 10)
```

The other way is to download it and to save it to your working directory.

Let us download ["Kvalitet vazduha po stanicama"](https://data.gov.rs/sr/datasets/r/0b6a7aa5-9b13-4a7c-8a80-f964e1c67bc3)
Make sure you save the file into your R-Project working directory before you ask R to execute the following

```
df_csv <- read.csv("air_quality_by_station.csv", stringsAsFactors = FALSE)
```

What do you think about this dataset?

##### readr::read_csv()

Just so you can see how easy it is to use other packages for importing data into R the code below illustrates the use of read_csv().

```
## If you don't have readr installed yet, uncomment and run the line below
#install.packages("readr")
library(readr)
df_csv <- read_csv("poslodavci.csv")
df_csv
```

#### Importing data using `data.table::fread()`

`fread()` is a powerful data import function that is similar to `read.table()` but faster and is a function of the `data.table` package.

You should only pass to the `fread()` funtion the name of the data file you want to import, and `fread()` will try to work out the appropriate way to import the data.


You can use R with appropriate packages to access other data formats. For example `jsonlite` package for `json` files or `foreign` package for `SPSS` data files. Try to look through the help of the packages you've been introduced to and discover other options.



[polen](https://data.gov.rs/sr/datasets/kontsentratsije-polena-u-vazdukhu/)
[saobracaj](https://data.gov.rs/sr/datasets/podatsi-o-saobratshajnim-nezgodama-po-politsijskim-upravama-i-opshtinama/)
[vazduh](https://data.gov.rs/sr/datasets/kvalitet-vazduha/)


[Getting Data From An Online Source](https://www.r-bloggers.com/getting-data-from-an-online-source/)
-----------------------------
© 2019 Tatjana Kecojevic
